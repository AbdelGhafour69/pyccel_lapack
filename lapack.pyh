#$ header function dgetrf(int32,int32,double[:,:](order=F),int32,int32[:],int32)
#$ header function dgetri(int32,double[:,:](order=F),int32,int32[:],double[:],int32,int32)
#$ header function dgetrs(char,int32,int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,int32)
#$ header function dgecon(char,int32,double[:,:](order=F),int32,double,double,double[:],int32[:],int32)
#$ header function sgesv(int32,int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,int32)
#$ header function dgesv(int32,int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,int32)
#$ header function sgesvx(char,char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],char,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgesvx(char,char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],char,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function sgbsv(int32,int32,int32,int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,int32)
#$ header function dgbsv(int32,int32,int32,int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,int32)
#$ header function sgbsvx(char,char,int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],char,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgbsvx(char,char,int32,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],char,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function sgtsv(int32,int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,int32)
#$ header function dgtsv(int32,int32,double[:],double[:],double[:],double[:,:](order=F),int32,int32)
#$ header function sgtsvx(char,char,int32,int32,float32[:],float32[:],float32[:],float32[:],float32[:],float32[:],float32[:],int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgtsvx(char,char,int32,int32,double[:],double[:],double[:],double[:],double[:],double[:],double[:],int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function sposv(char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dposv(char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function sposvx(char,char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,char,float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dposvx(char,char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,char,double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function sppsv(char,int32,int32,float32[:],float32[:,:](order=F),int32,int32)
#$ header function dppsv(char,int32,int32,double[:],double[:,:](order=F),int32,int32)
#$ header function sppsvx(char,char,int32,int32,float32[:],float32[:],char,float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dppsvx(char,char,int32,int32,double[:],double[:],char,double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function spbsv(char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dpbsv(char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function spbsvx(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,char,float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dpbsvx(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,char,double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function sptsv(int32,int32,float32[:],float32[:],float32[:,:](order=F),int32,int32)
#$ header function dptsv(int32,int32,double[:],double[:],double[:,:](order=F),int32,int32)
#$ header function sptsvx(char,int32,int32,float32[:],float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32)
#$ header function dptsvx(char,int32,int32,double[:],double[:],double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32)
#$ header function ssysv(char,int32,int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dsysv(char,int32,int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function ssysvx(char,char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32,int32[:],int32)
#$ header function dsysvx(char,char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32,int32[:],int32)
#$ header function sspsv(char,int32,int32,float32[:],int32[:],float32[:,:](order=F),int32,int32)
#$ header function dspsv(char,int32,int32,double[:],int32[:],double[:,:](order=F),int32,int32)
#$ header function sspsvx(char,char,int32,int32,float32[:],float32[:],int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dspsvx(char,char,int32,int32,double[:],double[:],int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double,double[:],double[:],double[:],int32[:],int32)
#$ header function sgels(char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dgels(char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sgelsy(int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],float32,int32,float32[:],int32,int32)
#$ header function dgelsy(int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],double,int32,double[:],int32,int32)
#$ header function sgelss(int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32,int32,float32[:],int32,int32)
#$ header function dgelss(int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double,int32,double[:],int32,int32)
#$ header function sgelsd(int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32,int32,float32[:],int32,int32[:],int32)
#$ header function dgelsd(int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double,int32,double[:],int32,int32[:],int32)
#$ header function sgglse(int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:],int32,int32)
#$ header function dgglse(int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:],int32,int32)
#$ header function sggglm(int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:],int32,int32)
#$ header function dggglm(int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:],int32,int32)
#$ header function ssyev(char,char,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dsyev(char,char,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function ssyevd(char,char,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32[:],int32,int32)
#$ header function dsyevd(char,char,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32[:],int32,int32)
#$ header function ssyevx(char,char,char,int32,float32[:,:](order=F),int32,float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32[:],int32)
#$ header function dsyevx(char,char,char,int32,double[:,:](order=F),int32,double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32[:],int32)
#$ header function ssyevr(char,char,char,int32,float32[:,:](order=F),int32,float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,int32[:],float32[:],int32,int32[:],int32,int32)
#$ header function dsyevr(char,char,char,int32,double[:,:](order=F),int32,double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,int32[:],double[:],int32,int32[:],int32,int32)
#$ header function sspev(char,char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dspev(char,char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function sspevd(char,char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32,int32)
#$ header function dspevd(char,char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32,int32)
#$ header function sspevx(char,char,char,int32,float32[:],float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32[:],int32[:],int32)
#$ header function dspevx(char,char,char,int32,double[:],double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32[:],int32[:],int32)
#$ header function ssbev(char,char,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dsbev(char,char,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function ssbevd(char,char,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32,int32)
#$ header function dsbevd(char,char,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32,int32)
#$ header function ssbevx(char,char,char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32[:],int32[:],int32)
#$ header function dsbevx(char,char,char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32[:],int32[:],int32)
#$ header function sgeev(char,char,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dgeev(char,char,int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sgeevx(char,char,char,char,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],float32,float32[:],float32[:],float32[:],int32,int32[:],int32)
#$ header function dgeevx(char,char,char,char,int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],double,double[:],double[:],double[:],int32,int32[:],int32)
#$ header function sgesvd(char,char,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dgesvd(char,char,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sgesdd(char,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32,int32[:],int32)
#$ header function dgesdd(char,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32,int32[:],int32)
#$ header function sstev(char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dstev(char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function sstevd(char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32,int32)
#$ header function dstevd(char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32,int32)
#$ header function sstevx(char,char,int32,float32[:],float32[:],float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32[:],int32[:],int32)
#$ header function dstevx(char,char,int32,double[:],double[:],double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32[:],int32[:],int32)
#$ header function sstevr(char,char,int32,float32[:],float32[:],float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,int32[:],float32[:],int32,int32[:],int32,int32)
#$ header function dstevr(char,char,int32,double[:],double[:],double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,int32[:],double[:],int32,int32[:],int32,int32)
#$ header function ssytrd(char,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:],int32,int32)
#$ header function dsytrd(char,int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:],int32,int32)
#$ header function ssptrd(char,int32,float32[:],float32[:],float32[:],float32[:],int32)
#$ header function dsptrd(char,int32,double[:],double[:],double[:],double[:],int32)
#$ header function ssbtrd(char,char,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dsbtrd(char,char,int32,int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function sorgtr(char,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dorgtr(char,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sormtr(char,char,char,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dormtr(char,char,char,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sopgtr(char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dopgtr(char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function sopmtr(char,char,char,int32,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dopmtr(char,char,char,int32,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function ssteqr(char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dsteqr(char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function ssterf(int32,float32[:],float32[:],int32)
#$ header function dsterf(int32,double[:],double[:],int32)
#$ header function sstedc(char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32,int32)
#$ header function dstedc(char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32,int32)
#$ header function sstegr(char,char,int32,float32[:],float32[:],float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,int32[:],float32[:],int32,int32[:],int32,int32)
#$ header function dstegr(char,char,int32,double[:],double[:],double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,int32[:],double[:],int32,int32[:],int32,int32)
#$ header function sstebz(char,char,int32,float32,float32,int32,int32,float32,float32[:],float32[:],int32,int32,float32[:],int32[:],int32[:],float32[:],int32[:],int32)
#$ header function dstebz(char,char,int32,double,double,int32,int32,double,double[:],double[:],int32,int32,double[:],int32[:],int32[:],double[:],int32[:],int32)
#$ header function sstein(int32,float32[:],float32[:],int32,float32[:],int32[:],int32[:],float32[:,:](order=F),int32,float32[:],int32[:],int32[:],int32)
#$ header function dstein(int32,double[:],double[:],int32,double[:],int32[:],int32[:],double[:,:](order=F),int32,double[:],int32[:],int32[:],int32)
#$ header function spteqr(char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dpteqr(char,int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function dsygv(int32,char,char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function ssygv(int32,char,char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dsygvd(int32,char,char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],int32,int32[:],int32,int32)
#$ header function ssygvd(int32,char,char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32[:],int32,int32)
#$ header function dsygvx(int32,char,char,char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32[:],int32)
#$ header function ssygvx(int32,char,char,char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32[:],int32)
#$ header function dspgv(int32,char,char,int32,double[:],double[:],double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function sspgv(int32,char,char,int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dspgvd(int32,char,char,int32,double[:],double[:],double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32,int32)
#$ header function sspgvd(int32,char,char,int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32,int32)
#$ header function dspgvx(int32,char,char,char,int32,double[:],double[:],double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32[:],int32[:],int32)
#$ header function sspgvx(int32,char,char,char,int32,float32[:],float32[:],float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32[:],int32[:],int32)
#$ header function dsbgv(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32)
#$ header function ssbgv(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32)
#$ header function dsbgvd(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32[:],int32,int32)
#$ header function ssbgvd(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32[:],int32,int32)
#$ header function dsbgvx(char,char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double,double,int32,int32,double,int32,double[:],double[:,:](order=F),int32,double[:],int32[:],int32[:],int32)
#$ header function ssbgvx(char,char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32,int32,int32,float32,int32,float32[:],float32[:,:](order=F),int32,float32[:],int32[:],int32[:],int32)
#$ header function dggev(char,char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sggev(char,char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dggevx(char,char,char,char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],double[:],double,double,double[:],double[:],double[:],int32,int32[:],bool[:],int32)
#$ header function sggevx(char,char,char,char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],float32[:],float32,float32,float32[:],float32[:],float32[:],int32,int32[:],bool[:],int32)
#$ header function dggsvd(char,char,char,int32,int32,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32[:],int32)
#$ header function sggsvd(char,char,char,int32,int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32[:],int32)
#$ header function sgetrf(int32,int32,float32[:,:](order=F),int32,int32[:],int32)
#$ header function sgetrs(char,int32,int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,int32)
#$ header function sgecon(char,int32,float32[:,:](order=F),int32,float32,float32,float32[:],int32[:],int32)
#$ header function sgerfs(char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgerfs(char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function sgetri(int32,float32[:,:](order=F),int32,int32[:],float32[:],int32,int32)
#$ header function sgeequ(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32,float32,float32,int32)
#$ header function dgeequ(int32,int32,double[:,:](order=F),int32,double[:],double[:],double,double,double,int32)
#$ header function sgbtrf(int32,int32,int32,int32,float32[:,:](order=F),int32,int32[:],int32)
#$ header function dgbtrf(int32,int32,int32,int32,double[:,:](order=F),int32,int32[:],int32)
#$ header function sgbtrs(char,int32,int32,int32,int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,int32)
#$ header function dgbtrs(char,int32,int32,int32,int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,int32)
#$ header function sgbcon(char,int32,int32,int32,float32[:,:](order=F),int32,int32[:],float32,float32,float32[:],int32[:],int32)
#$ header function dgbcon(char,int32,int32,int32,double[:,:](order=F),int32,int32[:],double,double,double[:],int32[:],int32)
#$ header function sgbrfs(char,int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgbrfs(char,int32,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function sgbequ(int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32,float32,float32,int32)
#$ header function dgbequ(int32,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],double,double,double,int32)
#$ header function sgttrf(int32,float32[:],float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgttrf(int32,double[:],double[:],double[:],double[:],int32[:],int32)
#$ header function sgttrs(char,int32,int32,float32[:],float32[:],float32[:],float32[:],int32[:],float32[:,:](order=F),int32,int32)
#$ header function dgttrs(char,int32,int32,double[:],double[:],double[:],double[:],int32[:],double[:,:](order=F),int32,int32)
#$ header function sgtcon(char,int32,float32[:],float32[:],float32[:],float32[:],int32[:],float32,float32,float32[:],int32[:],int32)
#$ header function dgtcon(char,int32,double[:],double[:],double[:],double[:],int32[:],double,double,double[:],int32[:],int32)
#$ header function sgtrfs(char,int32,int32,float32[:],float32[:],float32[:],float32[:],float32[:],float32[:],float32[:],int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dgtrfs(char,int32,int32,double[:],double[:],double[:],double[:],double[:],double[:],double[:],int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function spotrf(char,int32,float32[:,:](order=F),int32,int32)
#$ header function dpotrf(char,int32,double[:,:](order=F),int32,int32)
#$ header function spotrs(char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dpotrs(char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function spocon(char,int32,float32[:,:](order=F),int32,float32,float32,float32[:],int32[:],int32)
#$ header function dpocon(char,int32,double[:,:](order=F),int32,double,double,double[:],int32[:],int32)
#$ header function sporfs(char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dporfs(char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function spotri(char,int32,float32[:,:](order=F),int32,int32)
#$ header function dpotri(char,int32,double[:,:](order=F),int32,int32)
#$ header function spoequ(int32,float32[:,:](order=F),int32,float32[:],float32,float32,int32)
#$ header function dpoequ(int32,double[:,:](order=F),int32,double[:],double,double,int32)
#$ header function spptrf(char,int32,float32[:],int32)
#$ header function dpptrf(char,int32,double[:],int32)
#$ header function spptrs(char,int32,int32,float32[:],float32[:,:](order=F),int32,int32)
#$ header function dpptrs(char,int32,int32,double[:],double[:,:](order=F),int32,int32)
#$ header function sppcon(char,int32,float32[:],float32,float32,float32[:],int32[:],int32)
#$ header function dppcon(char,int32,double[:],double,double,double[:],int32[:],int32)
#$ header function spprfs(char,int32,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dpprfs(char,int32,int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function spptri(char,int32,float32[:],int32)
#$ header function dpptri(char,int32,double[:],int32)
#$ header function sppequ(char,int32,float32[:],float32[:],float32,float32,int32)
#$ header function dppequ(char,int32,double[:],double[:],double,double,int32)
#$ header function spbtrf(char,int32,int32,float32[:,:](order=F),int32,int32)
#$ header function dpbtrf(char,int32,int32,double[:,:](order=F),int32,int32)
#$ header function spbtrs(char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dpbtrs(char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function spbcon(char,int32,int32,float32[:,:](order=F),int32,float32,float32,float32[:],int32[:],int32)
#$ header function dpbcon(char,int32,int32,double[:,:](order=F),int32,double,double,double[:],int32[:],int32)
#$ header function spbrfs(char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dpbrfs(char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function spbequ(char,int32,int32,float32[:,:](order=F),int32,float32[:],float32,float32,int32)
#$ header function dpbequ(char,int32,int32,double[:,:](order=F),int32,double[:],double,double,int32)
#$ header function spttrf(int32,float32[:],float32[:],int32)
#$ header function dpttrf(int32,double[:],double[:],int32)
#$ header function spttrs(int32,int32,float32[:],float32[:],float32[:,:](order=F),int32,int32)
#$ header function dpttrs(int32,int32,double[:],double[:],double[:,:](order=F),int32,int32)
#$ header function sptcon(int32,float32[:],float32[:],float32,float32,float32[:],int32)
#$ header function dptcon(int32,double[:],double[:],double,double,double[:],int32)
#$ header function sptrfs(int32,int32,float32[:],float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32)
#$ header function dptrfs(int32,int32,double[:],double[:],double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32)
#$ header function ssytrf(char,int32,float32[:,:](order=F),int32,int32[:],float32[:],int32,int32)
#$ header function dsytrf(char,int32,double[:,:](order=F),int32,int32[:],double[:],int32,int32)
#$ header function ssytrs(char,int32,int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,int32)
#$ header function dsytrs(char,int32,int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,int32)
#$ header function ssycon(char,int32,float32[:,:](order=F),int32,int32[:],float32,float32,float32[:],int32[:],int32)
#$ header function dsycon(char,int32,double[:,:](order=F),int32,int32[:],double,double,double[:],int32[:],int32)
#$ header function ssyrfs(char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dsyrfs(char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function ssytri(char,int32,float32[:,:](order=F),int32,int32[:],float32[:],int32)
#$ header function dsytri(char,int32,double[:,:](order=F),int32,int32[:],double[:],int32)
#$ header function ssptrf(char,int32,float32[:],int32[:],int32)
#$ header function dsptrf(char,int32,double[:],int32[:],int32)
#$ header function ssptrs(char,int32,int32,float32[:],int32[:],float32[:,:](order=F),int32,int32)
#$ header function dsptrs(char,int32,int32,double[:],int32[:],double[:,:](order=F),int32,int32)
#$ header function sspcon(char,int32,float32[:],int32[:],float32,float32,float32[:],int32[:],int32)
#$ header function dspcon(char,int32,double[:],int32[:],double,double,double[:],int32[:],int32)
#$ header function ssprfs(char,int32,int32,float32[:],float32[:],int32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dsprfs(char,int32,int32,double[:],double[:],int32[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function ssptri(char,int32,float32[:],int32[:],float32[:],int32)
#$ header function dsptri(char,int32,double[:],int32[:],double[:],int32)
#$ header function strtrs(char,char,char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dtrtrs(char,char,char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function strcon(char,char,char,int32,float32[:,:](order=F),int32,float32,float32[:],int32[:],int32)
#$ header function dtrcon(char,char,char,int32,double[:,:](order=F),int32,double,double[:],int32[:],int32)
#$ header function strrfs(char,char,char,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dtrrfs(char,char,char,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function strtri(char,char,int32,float32[:,:](order=F),int32,int32)
#$ header function dtrtri(char,char,int32,double[:,:](order=F),int32,int32)
#$ header function stptrs(char,char,char,int32,int32,float32[:],float32[:,:](order=F),int32,int32)
#$ header function dtptrs(char,char,char,int32,int32,double[:],double[:,:](order=F),int32,int32)
#$ header function stpcon(char,char,char,int32,float32[:],float32,float32[:],int32[:],int32)
#$ header function dtpcon(char,char,char,int32,double[:],double,double[:],int32[:],int32)
#$ header function stprfs(char,char,char,int32,int32,float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dtprfs(char,char,char,int32,int32,double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function stptri(char,char,int32,float32[:],int32)
#$ header function dtptri(char,char,int32,double[:],int32)
#$ header function stbtrs(char,char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dtbtrs(char,char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function stbcon(char,char,char,int32,int32,float32[:,:](order=F),int32,float32,float32[:],int32[:],int32)
#$ header function dtbcon(char,char,char,int32,int32,double[:,:](order=F),int32,double,double[:],int32[:],int32)
#$ header function stbrfs(char,char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],int32[:],int32)
#$ header function dtbrfs(char,char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],int32[:],int32)
#$ header function dgebrd(int32,int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:],double[:],int32,int32)
#$ header function sgebrd(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:],float32[:],int32,int32)
#$ header function dgeqp3(int32,int32,double[:,:](order=F),int32,int32[:],double[:],double[:],int32,int32)
#$ header function sgeqp3(int32,int32,float32[:,:](order=F),int32,int32[:],float32[:],float32[:],int32,int32)
#$ header function dgeqrf(int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sgeqrf(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dgelqf(int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sgelqf(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dgeqlf(int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sgeqlf(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dgerqf(int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sgerqf(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dorgbr(char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sorgbr(char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dormbr(char,char,char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormbr(char,char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dorgqr(int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sorgqr(int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dormqr(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormqr(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dormlq(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormlq(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dorgql(int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sorgql(int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dormql(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormql(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dormrq(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormrq(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dormrz(char,char,int32,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormrz(char,char,int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dorgrq(int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sorgrq(int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dorglq(int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sorglq(int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dbdsqr(char,int32,int32,int32,int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32)
#$ header function sbdsqr(char,int32,int32,int32,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32)
#$ header function dbdsdc(char,char,int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32[:],double[:],int32[:],int32)
#$ header function sbdsdc(char,char,int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32[:],float32[:],int32[:],int32)
#$ header function dgbbrd(char,int32,int32,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32)
#$ header function sgbbrd(char,int32,int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32)
#$ header function dtzrzf(int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function stzrzf(int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dgehrd(int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sgehrd(int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dgebal(char,int32,double[:,:](order=F),int32,int32,int32,double[:],int32)
#$ header function sgebal(char,int32,float32[:,:](order=F),int32,int32,int32,float32[:],int32)
#$ header function dgebak(char,char,int32,int32,int32,double[:],int32,double[:,:](order=F),int32,int32)
#$ header function sgebak(char,char,int32,int32,int32,float32[:],int32,float32[:,:](order=F),int32,int32)
#$ header function dorghr(int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],int32,int32)
#$ header function sorghr(int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32)
#$ header function dormhr(char,char,int32,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function sormhr(char,char,int32,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dhseqr(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:],int32,int32)
#$ header function shseqr(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dhsein(char,char,char,bool[:],int32,double[:,:](order=F),int32,double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],int32[:],int32[:],int32)
#$ header function shsein(char,char,char,bool[:],int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],int32[:],int32[:],int32)
#$ header function dtrevc(char,char,bool[:],int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],int32)
#$ header function strevc(char,char,bool[:],int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],int32)
#$ header function dtrexc(char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],int32)
#$ header function strexc(char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],int32)
#$ header function dtrsyl(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double,int32)
#$ header function strsyl(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,int32)
#$ header function dtrsna(char,char,bool[:],int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],int32,int32,double[:,:](order=F),int32,int32[:],int32)
#$ header function strsna(char,char,bool[:],int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32,float32[:,:](order=F),int32,int32[:],int32)
#$ header function dtrsen(char,char,bool[:],int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],int32,double,double,double[:],int32,int32[:],int32,int32)
#$ header function strsen(char,char,bool[:],int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,float32,float32,float32[:],int32,int32[:],int32,int32)
#$ header function ssygst(int32,char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dsygst(int32,char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function sspgst(int32,char,int32,float32[:],float32[:],int32)
#$ header function dspgst(int32,char,int32,double[:],double[:],int32)
#$ header function spbstf(char,int32,int32,float32[:,:](order=F),int32,int32)
#$ header function dpbstf(char,int32,int32,double[:,:](order=F),int32,int32)
#$ header function ssbgst(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32)
#$ header function dsbgst(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32)
#$ header function sgghrd(char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32)
#$ header function dgghrd(char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32)
#$ header function sggbal(char,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],float32[:],float32[:],int32)
#$ header function dggbal(char,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],double[:],double[:],int32)
#$ header function sggbak(char,char,int32,int32,int32,float32[:],float32[:],int32,float32[:,:](order=F),int32,int32)
#$ header function dggbak(char,char,int32,int32,int32,double[:],double[:],int32,double[:,:](order=F),int32,int32)
#$ header function shgeqz(char,char,char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],int32,int32)
#$ header function dhgeqz(char,char,char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],int32,int32)
#$ header function stgevc(char,char,bool[:],int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],int32)
#$ header function dtgevc(char,char,bool[:],int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],int32)
#$ header function stgexc(bool,bool,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,int32,float32[:],int32,int32)
#$ header function dtgexc(bool,bool,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,int32,int32,double[:],int32,int32)
#$ header function stgsyl(char,int32,int32,int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32,float32,float32[:],int32,int32[:],int32)
#$ header function dtgsyl(char,int32,int32,int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double,double,double[:],int32,int32[:],int32)
#$ header function stgsna(char,char,bool[:],int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],int32,int32,float32[:],int32,int32[:],int32)
#$ header function dtgsna(char,char,bool[:],int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],int32,int32,double[:],int32,int32[:],int32)
#$ header function stgsen(int32,bool,bool,bool[:],int32,float32[:,:](order=F),int32,float32[:,:](order=F),int32,float32[:],float32[:],float32[:],float32[:,:](order=F),int32,float32[:,:](order=F),int32,int32,float32,float32,float32[:],float32[:],int32,int32[:],int32,int32)
#$ header function dtgsen(int32,bool,bool,bool[:],int32,double[:,:](order=F),int32,double[:,:](order=F),int32,double[:],double[:],double[:],double[:,:](order=F),int32,double[:,:](order=F),int32,int32,double,double,double[:],double[:],int32,int32[:],int32,int32)
